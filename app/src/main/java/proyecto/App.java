/*
 * This source file was generated by the Gradle 'init' task
 */
package Proyecto;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;

import javax.swing.JFrame;
import javax.swing.JPanel;


public class App {
    public static void main(String[] args) {
        // PR - TEST
        // Arreglo lo que simona queria
        // Arreglo un bug caliente HARD
    }
}


abstract class GameLoop {
    private boolean runFlag = false;

    public void run(double delta) {
        runFlag = true;
        startup();

        while (runFlag) {
            update(delta);
            draw();
        }

        shutdown();
    }

    public void stop() {
        runFlag = false;
    }

    public abstract void startup();
    public abstract void shutdown();
    public abstract void update(double delta);
    public abstract void draw();
}



abstract class JGame extends GameLoop {
    protected JFrame frame;
    protected JPanel canvas;
    protected Graphics2D g2d;
    protected int width, height;

    public JGame(String title, int width, int height) {
        this.width = width;
        this.height = height;

        frame = new JFrame(title);
        canvas = new JPanel() {
            @Override
            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                g2d = (Graphics2D) g;
                gameDraw(g2d);
            }
        };

        canvas.setPreferredSize(new Dimension(width, height));
        frame.add(canvas);
        frame.pack();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }

    @Override
    public void startup() {
        gameStartup();
    }

    @Override
    public void update(double delta) {
        gameUpdate(delta);
        canvas.repaint();
    }

    @Override
    public void draw() {
        // La l√≥gica de dibujo se hace en paintComponent
    }

    @Override
    public void shutdown() {
        gameShutdown();
    }

    public abstract void gameStartup();
    public abstract void gameUpdate(double delta);
    public abstract void gameDraw(Graphics2D g);
    public abstract void gameShutdown();
}








// abstract class GameLoop{
//     private boolean runFlag = false;
//     public void run(){
//         runFlag = true;
//         startup();
//         while(runFlag){
//             update();
//             draw();
//         }
//         shutdown();
//         }
//     public void stop(){
//         runFlag = false;
//     }
//     public abstract void startup();
//     public abstract void shutdown();
//     public abstract void update();
//     public abstract void draw();
//     }

// abstract class JGame extends GameLoop{
//     //attributes
//     public JGame(String title, int width, int height){
//     //read propertiesfile 
//     }
//         @Override public void startup(){
//             gameStartup();
//         }
//         public void update(double delta){
//             gameUpdate(delta);
//         }
//         @Override public void draw(){ gameDraw(g);}
//         @Override public void shutdown(){ gameShutdown(); }
//         public abstract void gameStartup();
//         public abstract void gameUpdate(double delta);
//         public abstract void gameDraw(Graphics2D g);
//         public abstract void gameShutdown();
//         protected void readPropertiesFile(){
//         // search file jgame.properties
//         }
//         }


